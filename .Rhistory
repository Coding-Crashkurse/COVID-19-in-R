weather_df <- weather_df %>%
filter(country %in% both)
both <- intersect(df$country, weather_df$country)
df <- df %>%
filter(country %in% both)
weather_df <- weather_df %>%
filter(country %in% both)
View(df)
df2 <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric)
View(df2)
df2 <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = colnames(df))
View(df2)
View(df)
df2 <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = colnames(df)[2:ncol(colnames(df))])
df2 <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = colnames(df)[2:ncol(df)])
View(df2)
df2$date
df2 <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y"))
df2$date
weather_df <- weather_df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(weather_df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y"))
weather_df2 <- weather_df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(weather_df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(weather_df)[2:ncol(weather_df )], "%m/%d/%Y"))
View(weather_df2)
View(weather_df2)
mean(weather_df2$Afghanistan)
View(weather_df2)
library(tidyverse)
library(data.table)
library(openxlsx)
library(RCurl)
library(readr)
library(readxl)
library(lubridate)
library(ggplot2)
library(countrycode)
# Read in all data
cases_global_link <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" # auf Raw klicken
weather_data_link <- "http://databank.worldbank.org/data/download/catalog/cckp_historical_data_0.xls"
tf = tempfile(fileext = ".xls")
curl::curl_download(weather_data_link, tf)
df <- data.table::fread(cases_global_link)
df <- df %>%
select(-c(`Province/State`, Lat, Long)) %>%
group_by(`Country/Region`) %>%
summarise_all(list(sum))
colnames(df)[1] <- "country"
weather_df <- readxl::read_excel(tf, sheet = 4)
weather_df$country <- countrycode::countrycode(weather_df$ISO_3DIGIT, origin = "iso3c", destination = "country.name")
weather_df <- weather_df %>%
select(-ISO_3DIGIT, -Annual_temp) %>%
select("country", everything())
both <- intersect(df$country, weather_df$country)
df <- df %>%
filter(country %in% both)
weather_df <- weather_df %>%
filter(country %in% both)
## EDA
df <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y"))
weather_df <- weather_df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(weather_df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(weather_df)[2:ncol(weather_df )], "%m/%d/%Y"))
View(df)
df <- df %>%
mutate_if(~is.numeric(.x), ~(.x - lag(.x, default = 0)))
df <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y")) %>%
mutate_if(~is.numeric(.x), ~(.x - lag(.x, default = 0)))
weather_df <- weather_df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(weather_df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(weather_df)[2:ncol(weather_df )], "%m/%d/%Y"))
View(weather_df)
library(tidyverse)
library(data.table)
library(openxlsx)
library(RCurl)
library(readr)
library(readxl)
library(lubridate)
library(ggplot2)
library(countrycode)
# Read in all data
cases_global_link <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" # auf Raw klicken
weather_data_link <- "http://databank.worldbank.org/data/download/catalog/cckp_historical_data_0.xls"
tf = tempfile(fileext = ".xls")
curl::curl_download(weather_data_link, tf)
df <- data.table::fread(cases_global_link)
df <- df %>%
select(-c(`Province/State`, Lat, Long)) %>%
group_by(`Country/Region`) %>%
summarise_all(list(sum))
colnames(df)[1] <- "country"
weather_df <- readxl::read_excel(tf, sheet = 4)
weather_df$country <- countrycode::countrycode(weather_df$ISO_3DIGIT, origin = "iso3c", destination = "country.name")
weather_df <- weather_df %>%
select(-ISO_3DIGIT, -Annual_temp) %>%
select("country", everything())
both <- intersect(df$country, weather_df$country)
df <- df %>%
filter(country %in% both)
weather_df <- weather_df %>%
filter(country %in% both)
## EDA
df <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y")) %>%
mutate_if(~is.numeric(.x), ~(.x - lag(.x, default = 0))) %>%
mutate_if(is.numeric, scale)
weather_df <- weather_df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(weather_df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(weather_df)[2:ncol(weather_df )], "%m/%d/%Y")) %>%
mutate_if(is.numeric, scale)
View(weather_df)
View(weather_df2)
View(df2)
lapply(df, class)
View(df)
library(tidyverse)
library(data.table)
library(openxlsx)
library(RCurl)
library(readr)
library(readxl)
library(lubridate)
library(ggplot2)
library(countrycode)
# Read in all data
cases_global_link <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" # auf Raw klicken
weather_data_link <- "http://databank.worldbank.org/data/download/catalog/cckp_historical_data_0.xls"
tf = tempfile(fileext = ".xls")
curl::curl_download(weather_data_link, tf)
df <- data.table::fread(cases_global_link)
df <- df %>%
select(-c(`Province/State`, Lat, Long)) %>%
group_by(`Country/Region`) %>%
summarise_all(list(sum))
colnames(df)[1] <- "country"
weather_df <- readxl::read_excel(tf, sheet = 4)
weather_df$country <- countrycode::countrycode(weather_df$ISO_3DIGIT, origin = "iso3c", destination = "country.name")
weather_df <- weather_df %>%
select(-ISO_3DIGIT, -Annual_temp) %>%
select("country", everything())
both <- intersect(df$country, weather_df$country)
df <- df %>%
filter(country %in% both)
weather_df <- weather_df %>%
filter(country %in% both)
## EDA
df <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y")) %>%
mutate_if(~is.numeric(.x), ~(.x - lag(.x, default = 0)))
weather_df <- weather_df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(weather_df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(weather_df)[2:ncol(weather_df )], "%m/%d/%Y"))
lapply(df, class)
df %>%
mutate_if(~is.numeric(.x), ~scale(.x))
df$Afghanistan
scale(df$Afghanistan)
res <- scale(df$Afghanistan)
df
df %>%
mutate_if(~is.numeric(.x), scale(.x))
df %>%
mutate_if(~is.numeric(.x), ~scale(.x))
lapply(df, scale)
df %>%
mutate_each(funs = scale)
df %>%
mutate_if(is.numeric, scale)
df %>%
mutate_all(is.numeric, scale)
df %>%
mutate_all(scale)
df %>%
mutate_if(is.numeric, funs(c(scale(.))))
mtcars
mtcars %>%
mutate_if(is.numeric, scale)
df %>%
mutate_if(is.numeric, scale)
df <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y")) %>%
mutate_if(~is.numeric(.x), ~(.x - lag(.x, default = 0))) %>%
mutate_if(is.numeric, scale)
library(tidyverse)
library(data.table)
library(openxlsx)
library(RCurl)
library(readr)
library(readxl)
library(lubridate)
library(ggplot2)
library(countrycode)
# Read in all data
cases_global_link <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" # auf Raw klicken
weather_data_link <- "http://databank.worldbank.org/data/download/catalog/cckp_historical_data_0.xls"
tf = tempfile(fileext = ".xls")
curl::curl_download(weather_data_link, tf)
df <- data.table::fread(cases_global_link)
df <- df %>%
select(-c(`Province/State`, Lat, Long)) %>%
group_by(`Country/Region`) %>%
summarise_all(list(sum))
colnames(df)[1] <- "country"
weather_df <- readxl::read_excel(tf, sheet = 4)
weather_df$country <- countrycode::countrycode(weather_df$ISO_3DIGIT, origin = "iso3c", destination = "country.name")
weather_df <- weather_df %>%
select(-ISO_3DIGIT, -Annual_temp) %>%
select("country", everything())
both <- intersect(df$country, weather_df$country)
df <- df %>%
filter(country %in% both)
weather_df <- weather_df %>%
filter(country %in% both)
## EDA
df <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y")) %>%
mutate_if(~is.numeric(.x), ~(.x - lag(.x, default = 0))) %>%
mutate_if(is.numeric, scale)
weather_df <- weather_df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(weather_df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(weather_df)[2:ncol(weather_df )], "%m/%d/%Y")) %>%
mutate_if(is.numeric, scale)
df
library(tidyverse)
library(data.table)
library(openxlsx)
library(RCurl)
library(readr)
library(readxl)
library(lubridate)
library(ggplot2)
library(countrycode)
# Read in all data
cases_global_link <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" # auf Raw klicken
weather_data_link <- "http://databank.worldbank.org/data/download/catalog/cckp_historical_data_0.xls"
tf = tempfile(fileext = ".xls")
curl::curl_download(weather_data_link, tf)
df <- data.table::fread(cases_global_link)
df <- df %>%
select(-c(`Province/State`, Lat, Long)) %>%
group_by(`Country/Region`) %>%
summarise_all(list(sum))
colnames(df)[1] <- "country"
weather_df <- readxl::read_excel(tf, sheet = 4)
weather_df$country <- countrycode::countrycode(weather_df$ISO_3DIGIT, origin = "iso3c", destination = "country.name")
weather_df <- weather_df %>%
select(-ISO_3DIGIT, -Annual_temp) %>%
select("country", everything())
both <- intersect(df$country, weather_df$country)
df <- df %>%
filter(country %in% both)
weather_df <- weather_df %>%
filter(country %in% both)
## EDA
df <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y")) %>%
mutate_if(~is.numeric(.x), ~(.x - lag(.x, default = 0))) %>%
mutate_if(is.numeric, scale)
weather_df <- weather_df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(weather_df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(weather_df)[2:ncol(weather_df )], "%m/%d/%Y")) %>%
mutate_if(is.numeric, scale)
View(df)
for(col in seq_along(df)) {
print(col)
}
df[[i]]
resultlist = list()
for(col in seq_along(df)) {
resultlist[[col]] <- cor(df[[col]], weather_df[[col]])
}
df[[col]]
c(df[[col]])
for(col in seq_along(df)) {
resultlist[[col]] <- cor(c(df[[col]]), c(weather_df[[col]]))
}
cor(df$Afghanistan, weather_df$Afghanistan)
weather_df$Afghanistan
cor(c(df$Afghanistan), c(weather_df$Afghanistan))
cor.test(c(1,2,3), c(1,2,3))
cor.test(c(1,2,3), c(1,2,3,4))
cor.test(df$Afghanistan, df$Afghanistan)
resultlist = list()
for(col in seq_along(df)) {
resultlist[[col]] <- cor.test(c(df[[col]]), c(weather_df[[col]]), method = "pearson")
}
for(col in seq_along(df)) {
resultlist[[col]] <- cor.test(df[[col]], weather_df[[col]], method = "pearson")
}
cor.test(df$Afghanistan, weather_df$Afghanistan)
View(weather_df)
by_month <- df %>%
group_by(month = floor_date(dates, "month")) %>%
summarise_if(is.numeric, sum, na.rm = TRUE)
by_month <- df %>%
group_by(month = floor_date(dates, "month")) %>%
summarise_if(is.numeric, sum, na.rm = TRUE)
by_month <- df %>%
group_by(month = floor_date(date, "month")) %>%
summarise_if(is.numeric, sum, na.rm = TRUE)
by_month
View(by_month)
by_month[4:11]
by_month[,4:11]
by_month[4:11,]
by_month <- by_month[4:11,]
View(weather_df)
weather_df$date
weather_df <- weather_df[4:11, ]
resultlist = list()
for(col in seq_along(df)) {
resultlist[[col]] <- cor.test(df[[col]], weather_df[[col]], method = "pearson")
}
for(col in seq_along(df)) {
resultlist[[col]] <- cor.test(by_month[[col]], weather_df[[col]], method = "pearson")
}
by_month$month
View(weather_df)
View(by_month)
library(tidyverse)
library(data.table)
library(openxlsx)
library(RCurl)
library(readr)
library(readxl)
library(lubridate)
library(ggplot2)
library(countrycode)
# Read in all data
cases_global_link <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv" # auf Raw klicken
weather_data_link <- "http://databank.worldbank.org/data/download/catalog/cckp_historical_data_0.xls"
tf = tempfile(fileext = ".xls")
curl::curl_download(weather_data_link, tf)
df <- data.table::fread(cases_global_link)
df <- df %>%
select(-c(`Province/State`, Lat, Long)) %>%
group_by(`Country/Region`) %>%
summarise_all(list(sum))
colnames(df)[1] <- "country"
weather_df <- readxl::read_excel(tf, sheet = 4)
weather_df$country <- countrycode::countrycode(weather_df$ISO_3DIGIT, origin = "iso3c", destination = "country.name")
weather_df <- weather_df %>%
select(-ISO_3DIGIT, -Annual_temp) %>%
select("country", everything())
both <- intersect(df$country, weather_df$country)
df <- df %>%
filter(country %in% both)
weather_df <- weather_df %>%
filter(country %in% both)
## EDA
df <- df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(df)[2:ncol(df)], "%m/%d/%Y")) %>%
mutate_if(~is.numeric(.x), ~(.x - lag(.x, default = 0))) %>%
mutate_if(is.numeric, scale)
weather_df <- weather_df %>%
select(-country) %>%
t() %>%
as.data.frame() %>%
setNames(weather_df$country) %>%
mutate_all(as.numeric) %>%
mutate(date = as.Date(colnames(weather_df)[2:ncol(weather_df )], "%m/%d/%Y")) %>%
mutate_if(is.numeric, scale)
by_month <- df %>%
group_by(month = floor_date(date, "month")) %>%
summarise_if(is.numeric, sum, na.rm = TRUE)
by_month <- by_month[4:11,] %>%
select(-month)
weather_df <- weather_df[4:11, ] %>%
select(-date)
resultlist = list()
for(col in seq_along(df)) {
resultlist[[col]] <- cor.test(by_month[[col]], weather_df[[col]], method = "pearson")
}
resultlist = list()
for(col in seq_along(by_month)) {
resultlist[[col]] <- cor.test(by_month[[col]], weather_df[[col]], method = "pearson")
}
data.table::rbindlist(resultlist)
cor.test(by_month[[col]], weather_df[[col]]
cor.test(by_month[[col]], weather_df[[col]])
cor.test(by_month[[col]], weather_df[[col]])
cor.test(by_month[[col]], weather_df[[col]])$cor
testres <- cor.test(by_month[[col]], weather_df[[col]])
testres$estimate
resultlist = list()
for(col in seq_along(by_month)) {
resultlist[[col]] <- cor.test(by_month[[col]], weather_df[[col]], method = "pearson")$estimate
}
data.table::rbindlist(resultlist)
resultlist
data.table::rbindlist(resultlist)
resultlist
View(resultlist)
testres <- cor.test(by_month[[col]], weather_df[[col]])
testres
x <- testres$estimate
x <- as.numeric(testres$estimate)
resultlist = list()
for(col in seq_along(by_month)) {
resultlist[[col]] <- as.numeric(cor.test(by_month[[col]], weather_df[[col]], method = "pearson")$estimate)
}
data.table::rbindlist(resultlist)
View(resultlist)
View(resultlist)
resultlist[[1]]
unlist(resultlist)
sort(unlist(resultlist))
